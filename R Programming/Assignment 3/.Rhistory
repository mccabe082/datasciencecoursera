dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
dat$State
unique(dat$State)
c(1,2,3,4,5,3,2,4,5)
v<-c(1,2,3,4,5,3,2,4,5)
n<-c(1,2,2,1,3,3,3,2,1)
vapply
?vapply
?split
v<-c(1,2,3,4,5,3,2,4,5)
n<-c(1,2,2,1,3,3,3,2,1)
data.frame(v=v,n=n)
data<-data.frame(v=v,n=n)
split(data,data$n)
?lapply
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
skip
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
best("SC", "heart attack")
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
return(lapply(ldat,sortData,column,num))
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
rankhospital("TX", "heart failure", 4)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
dim(rankall("heart attack", 20))
unique(rankall("heart attack", 20))
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
match("x",names(dd))
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
names(dat)
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
?vapply
?mapply
?tapply
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
myList <- list(c("A1","B1"), c("A2","B2","C2"), c("A3","B3"))
myList
myDataframe <- data.frame(x=c(1,2,3), y=c("R","S","T"))
myDataframe
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
a<-data.frame(Hospital.Name=el$Hospital.Name, State=el$State)
results<-data.frame(Hospital.Name=character(), State=character())
a<-data.frame(Hospital.Name="a fuckin rape clinic", State="tx"
)
merge(results,a)
merge(a,results)
a<-data.frame(Hospital.Name=el$Hospital.Name, State=el$State)
a<-data.frame(Hospital.Name="a fuckin rape clinic", State="tx")
b<-data.frame(Hospital.Name="a fuckin rape clinic", State="tx")
merge(a,b)
b<-data.frame(Hospital.Name="a fuckin rape clinic", State="tsx")
merge(a,b)
a
b
merge(a,b,by.x = )
merge(a,b)
?merge
merge(a,b,all.x = TRUE)
a
b
merge(a,b,all.x = TRUE)
merge(a,b,all.y = TRUE)
merge(a,b,all.x=True,all.y = TRUE)
merge(a,b,all.x=TRUE,all.y = TRUE)
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
#print(rankhospital("TX", "heart failure", 4)) #[1] "DETAR HOSPITAL NAVARRO"
## Helper Functions
# returns the appropriate column index for given cause of death
getColumn<-function(ailment,dat)
{
# get the ailment index
ailIndex <- if(ailment=="heart attack")
{
11 # Hospital 30-Day Death (Mortality) Rates from Heart Attack
}
else if (ailment=="heart failure")
{
17 # Hospital 30-Day Death (Mortality) Rates from Heart Failure
}
else if (ailment=="pneumonia")
{
23 # Hospital 30-Day Death (Mortality) Rates from Pneumonia
}
else
{
stop("invalid outcome")
}
return(names(dat)[ailIndex])
}
## Main Function
# find the best hospital in a state for a given cause of death
rankhospital <- function(state, outcome, num="best")
{
# load data
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# check for valid state
if (!any(state==unique(dat$State))){stop("invalid state")}
# get column name for cause of death stats.
column<-getColumn(outcome,dat)
# convert raw ailment stats to numeric
dat[,column]<-as.numeric(dat[,column])
# get good figures for state
dat<-dat[ state==dat$State & !is.na(dat[,column]),]
# sort by stats then name1
icol_name<-match("Hospital.Name",names(dat))
icol_stat<-match(column,names(dat))
dat<-dat[order(dat[,icol_stat],dat[,icol_name]),]
# get desired row
if(num=="best"){num<-1}
if (num=="worst"){num<-nrow(dat)}
if (num>nrow(dat)){return(NA)}
## Return hospital names in that state with lowest 30-day death rate
return(dat[[num,"Hospital.Name"]])
}
#print(best("TX", "heart attack")) #[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
## Helper Functions
# returns the appropriate column index for given cause of death
getColumn<-function(ailment,dat)
{
# get the ailment index
ailIndex <- if(ailment=="heart attack")
{
11 # Hospital 30-Day Death (Mortality) Rates from Heart Attack
}
else if (ailment=="heart failure")
{
17 # Hospital 30-Day Death (Mortality) Rates from Heart Failure
}
else if (ailment=="pneumonia")
{
23 # Hospital 30-Day Death (Mortality) Rates from Pneumonia
}
else
{
stop("invalid outcome")
}
return(names(dat)[ailIndex])
}
## Main Function
# find the best hospital in a state for a given cause of death
best <- function(state, outcome)
{
# load data
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# check for valid state
if (!any(state==unique(dat$State))){stop("invalid state")}
# get column name for cause of death stats.
column<-getColumn(outcome,dat)
# convert raw ailment stats to numeric
dat[,column]<-as.numeric(dat[,column])
# get good figures for state
dat<-dat[ state==dat$State & !is.na(dat[,column]),]
# hospital (row) index with lowest death rate
iHospital<-which.min(dat[,column])
## Return hospital name in that state with lowest 30-day death ## rate
return(dat[[iHospital,"Hospital.Name"]])
}
#print(rankhospital("TX", "heart failure", 4)) #[1] "DETAR HOSPITAL NAVARRO"
## Helper Functions
# returns the appropriate column index for given cause of death
getColumn<-function(ailment,dat)
{
# get the ailment index
ailIndex <- if(ailment=="heart attack")
{
11 # Hospital 30-Day Death (Mortality) Rates from Heart Attack
}
else if (ailment=="heart failure")
{
17 # Hospital 30-Day Death (Mortality) Rates from Heart Failure
}
else if (ailment=="pneumonia")
{
23 # Hospital 30-Day Death (Mortality) Rates from Pneumonia
}
else
{
stop("invalid outcome")
}
return(names(dat)[ailIndex])
}
sortData<-function(dat,num)
{
# sort rows by stats then name & drop stat column
dat<-dat[order(dat[,3],dat[,1]),c(1,2)]
# get desired row
if(num=="best"){num<-1}
if(num=="worst"){num<-nrow(dat)}
if(num>nrow(dat))
{
# use the first row (hopefully a there is a state there)
dat[[1,1]]<-"NA"
return(dat[1,])
}
else
{
return(dat[num,])
}
}
## Main Function
# find the best hospital in a state for a given cause of death
rankall <- function(outcome, num = "best")
{
# load data
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# get column name for cause of death stats.
column<-getColumn(outcome,dat)
# convert raw ailment stats to numeric
dat[,column]<-as.numeric(dat[,column])
# take just stats and name columns
dat<-dat[,c(2,match("State",names(dat)),match(column,names(dat)))]
# get good figures
dat<-dat[!is.na(dat[,column]),]
# split data by state
ldata<-split(dat,dat$State)
ldata<-lapply(ldata,sortData,num)
results<-data.frame(Hospital.Name=character(), State=character())
for(el in ldata)
{
newRow <- data.frame(Hospital.Name=el$Hospital.Name, State=el$State)
results<-merge(results,newRow,all.x=T,all.y=T)
}
return(results)
}
print(rankall("heart attack", 20))
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
r <- rankall("heart attack", 4)
as.character(subset(r, State == "HI")$hospital)
r <- rankall("heart attack", 4)
r <- rankall("heart attack", 100)
rankall("heart attack", 100)
rankall("heart attack")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 20)
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
r
order(r[,2])
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
c(1,2,4,5,2,NA,2,4)
a<-c(1,2,4,5,2,NA,2,4)
order(a)
a<-c(1,2,4,NA,5,2,NA,2,4)
order(a)
order(is.na(a))
is.na(a)
?order
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
?replace
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
?merge
source('C:/pSource/JHdatasciencecoursera/R Programming/Assignment 3/rankall.R')
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, State == "HI")$hospital)
r <- rankall("heart attack", 4)
R
r
as.character(subset(r, state == "HI")$Hospital)
as.character(subset(r, State == "HI")$Hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, State == "NJ")$Hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, State == "NV")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, State == "NV")$Hospital)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
PLOT(X,Y)
plot(x,y)
j<-function(t){2*(t^2)+2}
e<-0.01
(j(1+e)-j(1-e))/(2*e)
j<-function(t){2.0*(t^2.0)+2.0}
e<-0.01
t<-1.0
(j(1.0+e)-j(1.0-e))/(2.0*e)
(j(1.0+e)-j(1.0-e))/(2.0*e)
?getUrl
data<-read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"))
names(data)
data$VAL
values<-data$VAL(!is.na(data$VAL))
values<-data$VAL[!is.na(data$VAL)]
values
values[values==24]
length(values[values==24])
data<-read.xls(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "))
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileurl,destfile = "./data/gas.xls")
download.file(fileurl,destfile = "./gas.xls")
library(xlsx)
install.packages(xlsx)
"xlsx"
install.packages("xlsx")
dat<-read.xlsx("./gas.xls")
dat<-read.xlsx("./gas.xls")
library(xlsx)
dat<-read.xlsx("./gas.xls")
